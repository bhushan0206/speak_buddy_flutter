rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles - users can read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Story progress - users can read/write their own progress
    match /story_progress/{progressId} {
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Voice practice sessions - users can read/write their own sessions
    match /voice_sessions/{sessionId} {
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Story content - public read access for authenticated users
    match /story_chapters/{chapterId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins can modify stories
    }
    
    // AI characters - public read access for authenticated users
    match /ai_characters/{characterId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins can modify characters
    }
    
    // User achievements - users can read their own achievements
    match /achievements/{achievementId} {
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
