rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles - users can read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Story progress - users can read/write their own progress
    match /story_progress/{progressId} {
      allow read, write: if request.auth != null && 
        (progressId == request.auth.uid || 
         (resource != null && resource.data.userId == request.auth.uid));
    }
    
    // Voice practice sessions - users can read/write their own sessions
    match /voice_sessions/{sessionId} {
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    // Story content - public read access for authenticated users, AI can generate content
    match /story_chapters/{chapterId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null &&
        (request.resource.data.metadata.generatedBy == 'AI' || 
         request.resource.data.metadata.fallback == true);
      allow delete: if request.auth != null &&
        (resource.data.metadata.fallback == true || 
         resource.data.metadata.generatedBy == 'AI');
    }
    
    // AI characters - public read access for authenticated users, AI can generate content
    match /ai_characters/{characterId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
        (request.resource.data.metadata.generatedBy == 'AI' || 
         request.resource.data.metadata.fallback == true);
    }

    // User preferences - users can read/write their own preferences
    match /user_preferences/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // User interactions with AI - users can read/write their own interactions
    match /user_interactions/{interactionId} {
      allow read, write: if request.auth != null &&
        request.auth.uid == resource.data.userId;
    }
    
    // User achievements - users can read their own achievements
    match /achievements/{achievementId} {
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
